// <auto-generated />
using System;
using DatabaseAccessLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DatabaseAccessLayer.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20200318022437_101")]
    partial class _101
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DatabaseAccessLayer.FoodEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Calories")
                        .HasColumnType("int");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FoodForEntryId")
                        .HasColumnType("int");

                    b.Property<int>("Protien")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FoodForEntryId");

                    b.ToTable("FoodEntries");
                });

            modelBuilder.Entity("DatabaseAccessLayer.MealEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MealForEntryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MealForEntryId");

                    b.ToTable("MealEntries");
                });

            modelBuilder.Entity("DatabaseAccessLayer.SavedFood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Calories")
                        .HasColumnType("int");

                    b.Property<string>("FoodName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Protien")
                        .HasColumnType("int");

                    b.Property<int>("ServingSize")
                        .HasColumnType("int");

                    b.Property<int>("ServingUnit")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SavedFoods");
                });

            modelBuilder.Entity("DatabaseAccessLayer.SavedMeal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Calories")
                        .HasColumnType("int");

                    b.Property<string>("MealName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Protien")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SavedMeals");
                });

            modelBuilder.Entity("DatabaseAccessLayer.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CurrentWeight")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TargetWeight")
                        .HasColumnType("float");

                    b.Property<DateTime>("WeighInSchedule")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DatabaseAccessLayer.WeighIn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("WeighInDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("WeighIns");
                });

            modelBuilder.Entity("DatabaseAccessLayer.FoodEntry", b =>
                {
                    b.HasOne("DatabaseAccessLayer.SavedFood", "FoodForEntry")
                        .WithMany()
                        .HasForeignKey("FoodForEntryId");
                });

            modelBuilder.Entity("DatabaseAccessLayer.MealEntry", b =>
                {
                    b.HasOne("DatabaseAccessLayer.SavedMeal", "MealForEntry")
                        .WithMany()
                        .HasForeignKey("MealForEntryId");
                });
#pragma warning restore 612, 618
        }
    }
}
